const path = require("path");
const fs = require("fs");

// ----------
const targetFileName = path.join(__dirname, "..", "src/generated/tslib.ts");
const excludedLibs = [
  "dom",
  "dom.iterable",
  "scripthost",
  "webworker",
  "webworker.importscripts",
];
// ----------

const tsPath = require.resolve("typescript");
const tslibDir = path.dirname(tsPath);

const tsLibDirContents = fs.readdirSync(tslibDir);
const libNames = tsLibDirContents
  .flatMap(fileName => {
    const m = fileName.match(/^lib\.(.+)\.d\.ts$/);
    return m ? [m[1]] : [];
  })
  .filter(libName => !excludedLibs.includes(libName));

let generatedContents = `// This file is automatically generated by cloning TypeScript's standard library.
// See below contents for the license of these source code.

export const tsLibs: Record<string, string | undefined> = {\n`;

for (const libName of libNames) {
  const libContent = fs.readFileSync(
    path.join(tslibDir, `lib.${libName}.d.ts`),
    { encoding: "utf8" },
  );
  generatedContents += `  "${libName}": ${JSON.stringify(libContent).replace(
    /\r|\n|\u2028|\u2029/g,
    "",
  )},
`;
}
generatedContents += "};\n";

fs.mkdirSync(path.dirname(targetFileName), {
  recursive: true,
});
fs.writeFileSync(targetFileName, generatedContents);
